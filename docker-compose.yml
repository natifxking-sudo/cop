version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: cop-postgres
    environment:
      POSTGRES_DB: cop_platform
      POSTGRES_USER: cop_user
      POSTGRES_PASSWORD: cop_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - cop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cop_user -d cop_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: cop-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cop-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for file storage
  minio:
    image: minio/minio:latest
    container_name: cop-minio
    environment:
      MINIO_ROOT_USER: cop_minio_user
      MINIO_ROOT_PASSWORD: cop_minio_password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - cop-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # COP Platform Backend
  cop-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cop-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cop_platform
      SPRING_DATASOURCE_USERNAME: cop_user
      SPRING_DATASOURCE_PASSWORD: cop_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: cop_minio_user
      MINIO_SECRET_KEY: cop_minio_password
      JWT_SECRET: your-256-bit-secret-key-here-change-in-production
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - cop-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Frontend (Next.js)
  cop-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: cop-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
      NEXT_PUBLIC_WS_URL: ws://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - cop-backend
    networks:
      - cop-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  cop-network:
    driver: bridge
